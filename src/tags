Mmain	./main.c	/^int	main(void)$/
builtin_cd	./cd.c	/^int	builtin_cd(char **argv, char **env)$/
builtin_check	./builtin.c	/^bool	builtin_check(t_token *token)$/
builtin_close_fds	./builtin.c	/^void	builtin_close_fds(t_token *t, int *i, int *j)/
builtin_echo	./echo.c	/^int	builtin_echo(char **argv)$/
builtin_env	./env.c	/^int	builtin_env(char **argv, char **env)$/
builtin_exec	./builtin.c	/^int	builtin_exec(t_token *t)$/
builtin_exit	./exit.c	/^int	builtin_exit(char **argv, t_token *token)$/
builtin_export	./export.c	/^int	builtin_export(t_token *t)$/
builtin_export_checker	./export.c	/^static int	builtin_export_checker(t_token *t)$/
builtin_export_update	./export.c	/^static void	builtin_export_update(t_token *token, /
builtin_export_update_2	./export.c	/^static void	builtin_export_update_2(t_token *token/
builtin_pwd	./pwd.c	/^int	builtin_pwd(char **argv)$/
builtin_replace_fds	./builtin.c	/^void	builtin_replace_fds(int i, int j)$/
builtin_unset	./unset.c	/^int	builtin_unset(char **argv, char ***env)$/
builtin_unset_remove	./unset.c	/^static bool	builtin_unset_remove(char *var, char */
calculate	./libft/ft_split.c	/^static size_t	calculate(const char *s, char c, siz/
call_split	./libft/ft_split.c	/^static int	call_split(const char *s, char c, char /
check_sign	./libft/ft_atoi.c	/^static void	check_sign(const char *c, int *sign, i/
convert	./libft/ft_itoa.c	/^static void	convert(long *ln, char *str, int *ctr,/
copy_env	./environment.c	/^char	**copy_env(void)$/
count_digits	./libft/ft_itoa.c	/^static int	count_digits(int n)$/
exec_fork	./exec.c	/^pid_t	exec_fork(t_token *token, char	*cmdstr, pid_/
exec_get_path	./exec.c	/^char	*exec_get_path(t_token *token, char *e)$/
exec_run	./exec.c	/^int	exec_run(t_token *token, char *env)$/
exec_run_2	./exec.c	/^int	exec_run_2(t_token *token, char *env, int stat/
file_append	./file.c	/^void	file_append(t_token *token)$/
file_heredoc	./file.c	/^void	file_heredoc(t_token *token)$/
file_open	./file.c	/^void	file_open(t_token *token)$/
file_write	./file.c	/^void	file_write(t_token *token)$/
free_me	./libft/ft_split.c	/^static void	free_me(char **err, int len)$/
ft_atoi	./libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/
ft_bzero	./libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/
ft_calloc	./libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/
ft_getenv	./ft_getenv.c	/^char	*ft_getenv(const char *var, char **env)$/
ft_getenv_entry	./ft_getenv.c	/^char	*ft_getenv_entry(const char *var, char **env)/
ft_hasenvvar	./ft_getenv.c	/^bool	ft_hasenvvar(const char *var, char **env)$/
ft_iarti	./libft/ft_atoi.c	/^static int	ft_iarti(char digits[10], int c)$/
ft_isalnum	./libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/
ft_isalpha	./libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/
ft_isascii	./libft/ft_isascii.c	/^int	ft_isascii(int c)$/
ft_isdigit	./libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/
ft_isnum	./exit.c	/^static bool	ft_isnum(char *string)$/
ft_isprint	./libft/ft_isprint.c	/^int	ft_isprint(int c)$/
ft_isspace	./libft/ft_atoi.c	/^static int	ft_isspace(int c)$/
ft_itoa	./libft/ft_itoa.c	/^char	*ft_itoa(int n)$/
ft_lstadd_back	./libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/
ft_lstadd_front	./libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/
ft_lstclear	./libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *)/
ft_lstdelone	./libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void *)/
ft_lstiter	./libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/
ft_lstlast	./libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/
ft_lstmap	./libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *),/
ft_lstnew	./libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/
ft_lstsize	./libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/
ft_memccpy	./libft/ft_memccpy.c	/^void	*ft_memccpy(void *dst, const void *src, int c/
ft_memchr	./libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/
ft_memcmp	./libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size/
ft_memcpy	./libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t/
ft_memmove	./libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_/
ft_memset	./libft/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/
ft_putchar_fd	./libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/
ft_putendl_fd	./libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/
ft_putnbr_fd	./libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/
ft_putstr_fd	./libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/
ft_split	./libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/
ft_strchr	./libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/
ft_strdup	./libft/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/
ft_strjoin	./libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/
ft_strlcat	./libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size/
ft_strlcpy	./libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size/
ft_strlen	./libft/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/
ft_strmapi	./libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned/
ft_strncmp	./libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, siz/
ft_strnstr	./libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char /
ft_strrchr	./libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/
ft_strtrim	./libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/
ft_substr	./libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start,/
ft_tolower	./libft/ft_tolower.c	/^int	ft_tolower(int c)$/
ft_toupper	./libft/ft_toupper.c	/^int	ft_toupper(int c)$/
get_env_size	./environment.c	/^size_t	get_env_size(const char **env)$/
get_envar	./env.c	/^char	*get_envar(char **env, char *str, int *slen, /
get_next_line	./get_next_line/get_next_line.c	/^char	*get_next_line(int fd)$/
gnl_memchr	./get_next_line/get_next_line_utils.c	/^void	*gnl_memchr(const void *s, int c, size_t n)$/
gnl_memcpy	./get_next_line/get_next_line_utils.c	/^void	*gnl_memcpy(void *dst, const void *src, size_/
main2	./main.c	/^static void	main2(char *line, t_token *token)$/
main_readline	./main.c	/^static char	*main_readline(void)$/
only_ns	./echo.c	/^static bool	only_ns(char *string)$/
parse_c_arg	./parse.c	/^void	parse_c_arg(t_token *token)$/
parse_func	./parse.c	/^int	parse_func(t_token *token)$/
pipe_check	./pipe.c	/^int	pipe_check(t_token *token)$/
pipe_childs	./pipe.c	/^pid_t	pipe_childs(int childno, t_token *token, int/
pipe_func	./pipe.c	/^int	pipe_func(t_token *token)$/
pipe_skip_qtm_and_move	./pipe.c	/^int	pipe_skip_qtm_and_move(char *str)$/
pipe_split_heredoc	./pipe.c	/^void	pipe_split_heredoc(t_token *token, int childn/
print_header	./header.c	/^void	print_header(void)$/
print_header_part2	./header.c	/^static void	print_header_part2(void)$/
print_header_part3	./header.c	/^static void	print_header_part3(void)$/
read_line	./get_next_line/get_next_line_utils.c	/^bool	read_line(t_string_builder **builder, int fd)/
remove_var	./unset.c	/^static char	**remove_var(char *var, char ***env)$/
rmc	./libft/ft_strtrim.c	/^static int	rmc(const char str, const char *set)$/
seo	./libft/ft_strtrim.c	/^static void	seo(size_t *eo, const char *str, const/
signals_builtins	./signals.c	/^void	signals_builtins(void)$/
signals_default	./signals_default.c	/^void	signals_default(void)$/
signals_default_handler	./signals_default.c	/^static void	signals_default_handler(int s)$/
signals_execution	./signals_execution.c	/^void	signals_execution(void)$/
signals_execution_handler	./signals_execution.c	/^static void	signals_execution_handler(int s)$/
signals_reset	./signals.c	/^void	signals_reset(void)$/
signals_reset_echoctl	./signals.c	/^void	signals_reset_echoctl(void)$/
str_copy	./str.c	/^char	*str_copy(t_token *token)$/
str_copy_chars	./str.c	/^void	str_copy_chars(t_token *token, char *dst)$/
str_copy_chars_token	./str.c	/^void	str_copy_chars_token(t_token *token, char **d/
str_exitstat	./str_2.c	/^int	str_exitstat(t_token *token, char **dst)$/
str_get_malloc_len	./str.c	/^int	str_get_malloc_len(t_token *t, char *s, int m,/
str_move_j	./str_2.c	/^void	str_move_j(int *j, char *s)$/
str_replace_len	./str.c	/^int	str_replace_len(t_token *token, char *s, char /
str_wildcard	./str_2.c	/^int	str_wildcard(char *s, char **dst, char c)$/
string_builder_append	./get_next_line/get_next_line_utils.c	/^void	string_builder_append(t_string_builder **this/
string_builder_cut_nl	./get_next_line/get_next_line.c	/^t_string_builder	*string_builder_cut_nl(t_string_b/
string_builder_has_new_line	./get_next_line/get_next_line_utils.c	/^bool	string_builder_has_new_line(t_string_builder /
string_builder_new	./get_next_line/get_next_line.c	/^t_string_builder	*string_builder_new(void)$/
string_builder_size_nl	./get_next_line/get_next_line.c	/^size_t	string_builder_size_nl(t_string_builder *th/
string_builder_to_string_nl	./get_next_line/get_next_line.c	/^char	*string_builder_to_string_nl(t_string_builder/
string_compare_until	./export.c	/^static bool	string_compare_until(char *self, char /
string_equals	./utils_strings.c	/^bool	string_equals(const char *self, const char *o/
string_starts_with	./utils_strings.c	/^bool	string_starts_with(const char *self, const ch/
string_starts_with_ec	./utils_strings.c	/^bool	string_starts_with_ec($/
syntax_check	./syntax.c	/^int	syntax_check(char *str)$/
syntax_followup	./syntax.c	/^int	syntax_followup(char *str)$/
syntax_guillemets	./syntax.c	/^int	syntax_guillemets(char *string)$/
syntax_parenthesis	./syntax.c	/^int	syntax_parenthesis(char *str)$/
syntax_quotation_marks	./syntax.c	/^int	syntax_quotation_marks(char *string)$/
t_heredoc	./token.h	/^}				t_heredoc;$/
t_list	./libft/libft.h	/^}	t_list;$/
t_string_builder	./get_next_line/get_next_line_utils.h	/^}	t_string_builder;$/
t_token	./token.h	/^}				t_token;$/
token_check_eof	./token.c	/^int	token_check_eof(char *line, char *str)$/
token_create	./token.c	/^void	token_create(t_token *self)$/
token_get_heredocs	./token.c	/^t_heredoc	*token_get_heredocs(char *str)$/
token_move_one_char	./token.c	/^void	token_move_one_char(t_token *token)$/
token_remove_heredoc	./token.c	/^void	token_remove_heredoc(t_token *token, int i)$/
tokenizer_apply_or_and	./tokenizer.c	/^int	tokenizer_apply_or_and(t_token *token)$/
tokenizer_apply_or_and_2	./tokenizer2.c	/^void	tokenizer_apply_or_and_2(t_token *token, int /
tokenizer_apply_parenthesis	./tokenizer.c	/^int	tokenizer_apply_parenthesis(t_token *token)$/
tokenizer_check_or_and	./tokenizer.c	/^int	tokenizer_check_or_and(t_token *token)$/
tokenizer_check_parenthesis	./tokenizer.c	/^int	tokenizer_check_parenthesis(t_token *token)$/
tokenizer_func	./tokenizer.c	/^int	tokenizer_func(t_token *token)$/
utils_free_char_array	./utils.c	/^void	utils_free_char_array(char **array)$/
utils_free_token	./utils.c	/^int	utils_free_token(t_token *token, int mode)$/
utils_is_identifier	./utils_is_identifier.c	/^bool	utils_is_identifier(char *string)$/
utils_is_identifier_length	./utils_is_identifier.c	/^bool	utils_is_identifier_length(char *string, size/
utils_is_whitespace	./utils.c	/^bool	utils_is_whitespace(const char c)$/
utils_only_whitespace	./utils.c	/^bool	utils_only_whitespace(const char *string)$/
